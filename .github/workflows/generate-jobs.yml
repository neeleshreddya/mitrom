name: Generate Jobs List

on:
  push:
    branches: [ main, master ]
    paths:
      - "jobs/**"
      - ".github/workflows/generate-jobs.yml"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4

      - name: Generate jobs/jobs.json
        run: |
          python - <<'PY'
          import json, glob, os, subprocess
          from bs4 import BeautifulSoup

          files = sorted(glob.glob('jobs/*.html'))
          jobs = []
          for f in files:
            if os.path.basename(f).lower() == 'index.html':
              continue
            try:
              with open(f, encoding='utf-8', errors='ignore') as fh:
                soup = BeautifulSoup(fh, 'html.parser')
            except Exception:
              continue

            # Title: prefer first H1/H2, then <title>, then filename
            title_tag = soup.find(['h1','h2'])
            if title_tag and title_tag.get_text(strip=True):
              title = title_tag.get_text(strip=True)
            elif soup.title and soup.title.string:
              title = soup.title.string.strip()
            else:
              title = os.path.splitext(os.path.basename(f))[0].replace('-', ' ').title()

            # Short description: first <p>
            p = soup.find('p')
            desc = p.get_text(" ", strip=True) if p else ""

            # Git commit date for file (YYYY-MM-DD), fallback to file mtime
            try:
              out = subprocess.check_output(['git','log','-1','--format=%cs','--',f])
              date = out.decode().strip()
            except Exception:
              try:
                mtime = os.path.getmtime(f)
                from datetime import datetime
                date = datetime.utcfromtimestamp(mtime).strftime('%Y-%m-%d')
              except Exception:
                date = ""

            # Use filename as relative link (works from /jobs/index.html)
            link = os.path.basename(f)

            jobs.append({
              "title": title,
              "link": link,
              "date": date,
              "description": desc
            })

          # sort by date descending when date available
          def sort_key(item):
            return item.get('date') or ''
          jobs.sort(key=sort_key, reverse=True)

          os.makedirs('jobs', exist_ok=True)
          with open('jobs/jobs.json', 'w', encoding='utf-8') as out:
            json.dump(jobs, out, ensure_ascii=False, indent=2)
          print("Wrote jobs/jobs.json with", len(jobs), "entries")
          PY

      - name: Commit and push jobs.json
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add jobs/jobs.json
          git commit -m "chore: update jobs.json" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}
